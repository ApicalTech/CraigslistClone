@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model CraigslistClone.Models.ThreadTopicModel

<style>
    .zoom 
    {
      transition: transform .3s; /* Animation */
      margin: 0 auto;
    }

    .zoom:hover 
    {
        transform: scale(2.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
        vertical-align: middle;
    }
</style>

@{
    ViewData["Title"] = "Topic";
}

<h1>Check out all of the @Model.Thread.Name listings!</h1>

<span id="headingbtn">
    @if (Model.Listings.Any() && SignInManager.IsSignedIn(User))
    {
        <a asp-controller="Listing" asp-action="Create" asp-route-id=@Model.Thread.Id class="btn btn-dark"> Create Post </a>
        <br />
    }
</span>

<body>
    <br />
    <div class="row" id="forumIndexContent">
        @if (Model.Listings.Any())
        {
            <table class="table table-bordered table-hover">
                <tbody>
                    @foreach (var listing in Model.Listings)
                    {
                        @if ( (DateTime.Compare(listing.ExpireDate, DateTime.Today)) > 0 ) // If ExpireDate is greater than the current date
                        {
                            <tr onclick="location.href = '@(Url.Action("Index", "Listing", new { Id = listing.Id }))'">
                                <td width="200">
                                    <a asp-controller="Listing" asp-action="Index" asp-route-id="@listing.Id">
                                        @listing.Title
                                    </a>
                                </td>

                              @{
                                  string[] imgArray = new string[listing.Images.Count()];
                                  int index = 0;


                                @foreach (var img in listing.Images)
                                {
                                    <td>
                                    @{
                                        var t = Convert.ToBase64String(img.Data);
                                        imgArray[index] = String.Format("data:image/png;base64,{0}", t);


                                        <div class="zoom">
                                            <img class="img-fluid" src="@imgArray[index]" height="100" width="200" />
                                        </div>

                                        index++;

                                    }
                                    </td>

                                        }

                                        if (index < 3)
                                        {
                                            for (int i = index; i < 3; i++)
                                            {
                                                <td></td>
                                            }
                                        }
                                }

                                <td style="width:20%; text-align:center">
                                    Listing Date: @listing.PostDate.ToString("d")
                                </td>
                            </tr>
                          }
                    }
                </tbody>
            </table>
        }
        else
        {

            @if (SignInManager.IsSignedIn(User))
            {
                <div class="noPosts" style="text-align: center;">
                    <p style="display: inline-block;">
                        <br /> It looks like there are no @Model.Thread.Name listings yet. <br />
                        Why not <a asp-controller="Listing" asp-action="Create" asp-route-id="@Model.Thread.Id"><span>Create One?</span></a>
                    </p>
                </div>
            }
            else
            {
                <div class"noPostsSignedOut" style="text-align: center;" >
                    <p>
                        There are no current listings for @Model.Thread.Name please sign in if you would like to create one!
                    </p>
                </div>
            }
        }
    </div>
</body>